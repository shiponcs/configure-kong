---
admin:
  annotations:
    konghq.com/protocol: https
  enabled: true
  http:
    enabled: false
  ingress:
    annotations:
      konghq.com/https-redirect-status-code: "301"
      konghq.com/protocols: https
      konghq.com/strip-path: "true"
      kubernetes.io/ingress.class: kong
      nginx.ingress.kubernetes.io/app-root: /
      nginx.ingress.kubernetes.io/backend-protocol: HTTPS
      nginx.ingress.kubernetes.io/permanent-redirect-code: "301"
    enabled: true
    hostname: localhost
    path: /api
    tls: kong-admin-cert
  tls:
    containerPort: 8444
    enabled: true
    parameters:
    - http2
    servicePort: 8444
  type: ClusterIP
affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app.kubernetes.io/instance
            operator: In
            values:
            - dataplane
        topologyKey: kubernetes.io/hostname
      weight: 100
certificates:
  enabled: true
  issuer: kong-issuer
  cluster:
    enabled: true
    clusterIssuer: kong-selfsigned-issuer
  admin:
    enabled: true
    commonName: gateway.kong.example.com
  portal:
    enabled: true
    commonName: developer.kong.example.com
  proxy:
    enabled: true
    commonName: kong.example.com
    dnsNames:
    - 'localhost'
cluster:
  enabled: true
  labels:
    konghq.com/service: cluster
  tls:
    containerPort: 8005
    enabled: true
    servicePort: 8005
  type: ClusterIP
clustertelemetry:
  enabled: true
  tls:
    containerPort: 8006
    enabled: true
    servicePort: 8006
    type: ClusterIP
deployment:
  kong:
    daemonset: false
    enabled: true
enterprise:
  enabled: false
  license_secret: kong-enterprise-license
  portal:
    enabled: true
  rbac:
    admin_api_auth: basic-auth
    admin_gui_auth_conf_secret: kong-config-secret
    enabled: true
    session_conf_secret: kong-config-secret
  smtp:
    enabled: false
  vitals:
    enabled: true
env:
  admin_access_log: /dev/stdout
  admin_gui_api_url: https://gateway.kong.example.com/api
  admin_error_log: /dev/stdout
  admin_gui_access_log: /dev/stdout
  admin_gui_error_log: /dev/stdout
  admin_gui_host: gateway.kong.example.com
  admin_gui_protocol: https
  admin_gui_url: https://gateway.kong.example.com/
  cluster_data_plane_purge_delay: 60
  cluster_listen: 0.0.0.0:8005
  cluster_telemetry_listen: 0.0.0.0:8006
  database: postgres
  log_level: debug
  lua_package_path: /opt/?.lua;;
  nginx_worker_processes: "2"
  password:
    valueFrom:
      secretKeyRef:
        key: kong_admin_password
        name: kong-config-secret
  pg_database: kong
  pg_host:
    valueFrom:
      secretKeyRef:
        key: pg_host
        name: kong-config-secret
  pg_ssl: "off"
  pg_ssl_verify: "off"
  pg_user: kong
  plugins: bundled
  portal: true
  portal_api_access_log: /dev/stdout
  portal_api_error_log: /dev/stdout
  portal_api_url: https://developer.kong.example.com/api
  portal_auth: basic-auth
  portal_cors_origins: '*'
  portal_gui_access_log: /dev/stdout
  portal_gui_error_log: /dev/stdout
  portal_gui_host: developer.kong.example.com
  portal_gui_protocol: https
  portal_gui_url: https://developer.kong.example.com/
  portal_session_conf:
    valueFrom:
      secretKeyRef:
        key: portal_session_conf
        name: kong-config-secret
  prefix: /kong_prefix/
  proxy_access_log: /dev/stdout
  proxy_error_log: /dev/stdout
  proxy_stream_access_log: /dev/stdout
  proxy_stream_error_log: /dev/stdout
  smtp_mock: "on"
  status_listen: 0.0.0.0:8100
  trusted_ips: 0.0.0.0/0,::/0
  vitals: true
extraLabels:
  konghq.com/component: kong
image:
  repository: kong
  tag: "3.4"
ingressController:
  enabled: true
  env:
    kong_admin_filter_tag: ingress_controller_kong
    kong_admin_tls_skip_verify: true
    kong_admin_token:
      valueFrom:
        secretKeyRef:
          key: password
          name: kong-config-secret
    kong_admin_url: https://localhost:8444
    # comment this, since this feature is not available on open source version
    # kong_workspace: default
    publish_service: kong/kong-proxy
  image:
    repository: docker.io/kong/kubernetes-ingress-controller
    tag: "2.10"
  ingressClass: kong
  installCRDs: false
manager:
  annotations:
    konghq.com/protocol: https
  enabled: true
  http:
    containerPort: 8002
    enabled: false
    servicePort: 8002
  ingress:
    annotations:
      konghq.com/https-redirect-status-code: "301"
      kubernetes.io/ingress.class: kong
      nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    enabled: true
    hostname: gateway.kong.example.com
    path: /
    tls: kong-admin-cert
  tls:
    containerPort: 8445
    enabled: true
    parameters:
    - http2
    servicePort: 8445
  type: ClusterIP
migrations:
  enabled: true
  postUpgrade: true
  preUpgrade: true
namespace: kong
podAnnotations:
  kuma.io/gateway: enabled
portal:
  annotations:
    konghq.com/protocol: https
  enabled: true
  http:
    containerPort: 8003
    enabled: false
    servicePort: 8003
  ingress:
    annotations:
      konghq.com/https-redirect-status-code: "301"
      konghq.com/protocols: https
      konghq.com/strip-path: "false"
      kubernetes.io/ingress.class: kong
    enabled: true
    hostname: developer.kong.example.com
    path: /
    tls: kong-portal-cert
  tls:
    containerPort: 8446
    enabled: true
    parameters:
    - http2
    servicePort: 8446
  type: ClusterIP
portalapi:
  annotations:
    konghq.com/protocol: https
  enabled: true
  http:
    enabled: false
  ingress:
    annotations:
      konghq.com/https-redirect-status-code: "301"
      konghq.com/protocols: https
      konghq.com/strip-path: "true"
      kubernetes.io/ingress.class: kong
      nginx.ingress.kubernetes.io/app-root: /
    enabled: true
    hostname: developer.kong.example.com
    path: /api
    tls: kong-portal-cert
  tls:
    containerPort: 8447
    enabled: true
    parameters:
    - http2
    servicePort: 8447
  type: ClusterIP
postgresql:
  enabled: true
  auth:
    database: kong
    username: kong
  image:
    # use postgres < 14 until is https://github.com/Kong/kong/issues/8533 resolved and released
    # enterprise (kong-gateway) supports postgres 14
    repository: postgres
    tag: "13"
proxy:
  annotations:
    prometheus.io/port: "9542"
    prometheus.io/scrape: "true"
  enabled: true
  http:
    containerPort: 8080
    enabled: true
    hostPort: 80
  ingress:
    enabled: false
  labels:
    enable-metrics: true
  tls:
    containerPort: 8443
    enabled: true
    hostPort: 443
  type: LoadBalancer
replicaCount: 1
secretVolumes: []
status:
  enabled: true
  http:
    containerPort: 8100
    enabled: true
  tls:
    containerPort: 8543
    enabled: false